/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Address } from "./Address"
import { Code } from "./Code"
import { FinancialInstitutionInformation } from "./FinancialInstitutionInformation"
import { Insurability } from "./Insurability"

import { decodeBase64 } from "./ModelHelper"

export class Patient {
  constructor(json: JSON | any) {
    Object.assign(this as Patient, json)
  }

  active?: boolean
  addresses?: Array<Address>
  alias?: string
  civility?: string
  dateOfBirth?: number
  dateOfDeath?: number
  education?: string
  externalId?: string
  financialInstitutionInformation?: Array<FinancialInstitutionInformation>
  firstName?: string
  gender?: Patient.GenderEnum
  insurabilities?: Array<Insurability>
  languages?: Array<string>
  lastName?: string
  maidenName?: string
  nationality?: string
  note?: string
  parameters?: { [key: string]: Array<string> }
  partnerName?: string
  patientProfessions?: Array<Code>
  personalStatus?: Patient.PersonalStatusEnum
  placeOfBirth?: string
  placeOfDeath?: string
  profession?: string
  spouseName?: string
  ssin?: string
  warning?: string
}
export namespace Patient {
  export type GenderEnum = "M" | "F" | "I" | "C" | "Y" | "X" | "U"
  export const GenderEnum = {
    M: "M" as GenderEnum,
    F: "F" as GenderEnum,
    I: "I" as GenderEnum,
    C: "C" as GenderEnum,
    Y: "Y" as GenderEnum,
    X: "X" as GenderEnum,
    U: "U" as GenderEnum
  }
  export type PersonalStatusEnum =
    | "single"
    | "in_couple"
    | "married"
    | "separated"
    | "divorced"
    | "divorcing"
    | "widowed"
    | "widower"
    | "complicated"
    | "unknown"
    | "contract"
    | "other"
  export const PersonalStatusEnum = {
    Single: "single" as PersonalStatusEnum,
    InCouple: "in_couple" as PersonalStatusEnum,
    Married: "married" as PersonalStatusEnum,
    Separated: "separated" as PersonalStatusEnum,
    Divorced: "divorced" as PersonalStatusEnum,
    Divorcing: "divorcing" as PersonalStatusEnum,
    Widowed: "widowed" as PersonalStatusEnum,
    Widower: "widower" as PersonalStatusEnum,
    Complicated: "complicated" as PersonalStatusEnum,
    Unknown: "unknown" as PersonalStatusEnum,
    Contract: "contract" as PersonalStatusEnum,
    Other: "other" as PersonalStatusEnum
  }
}
